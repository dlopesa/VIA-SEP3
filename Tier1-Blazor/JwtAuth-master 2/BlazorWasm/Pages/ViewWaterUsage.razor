@page "/viewwaterusage"
@using HttpClients.ClientInterface
@using Domain.Models
@inject IWaterService waterService

<PageTitle>ViewWaterUsage</PageTitle>
<h3>ViewWaterUsage</h3>
<div>
    <button @onclick="LoadUsage">Load</button>
</div>
 <label style="color: red">@msg</label>
@if (waterUsages == null)
{
}
else if (!waterUsages.Any())
{
    <p>No Todos to display</p>
}
else
{
    <table class="table">
        <thead>
        <tr>
            <th>Water Usage ID</th>
            <th>Owner ID</th>
            <th>Usage</th>
            <th>Month</th>
            <th>Year</th>
            <th>Edit</th>
            <th>Delete?</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var item in waterUsages)
        {
            <tr>
                <td>@item.id</td>
                <td>@item.userId</td>
                <td>@item.amount</td>
                <td>@item.month</td>
                <td>@item.year</td>
                @* <td> *@
                @*     <img src="icons/edit.gif" class="funnel" @onclick="@(() => navMgr.NavigateTo($"/EditTodo/{item.Id}"))"/> *@
                @* </td> *@
                @* <td> *@
                @*     <label @onclick="@(() => RemoveTodo(item.Id))" style="cursor:pointer; color: red; font-weight: bold"> *@
                @*         &#x2717; *@
                @*     </label> *@
                @* </td> *@
            </tr>
        }
        </tbody>
    </table>
}




@code {
    string msg = "";
    IEnumerable<WaterUsage> waterUsages ;
    private async Task LoadUsage()
    {
        try
        {
            waterUsages = await waterService.GetAsync(1);
        }
        catch (Exception e)
            {
            Console.WriteLine(e);
            msg = e.Message;
        }
    }
    
}